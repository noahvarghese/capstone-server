name: Continuous Integration

on:
  push:
    branches:
      - "*"
      - "!main"
  pull_request:
    branches:
      - "*"

jobs:
  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: install dependencies
        run: npm i
      - name: check formatting
        run: npm run format:check
  continuous-integration:
    env:
      DB: ${{ secrets.DB }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_PWD: ${{ secrets.DB_PWD }}
      DB_TYPE: ${{ secrets.DB_TYPE }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USER: ${{ secrets.DB_USER }}
      ENABLE_MULTITHREADING: ${{ secrets.ENABLE_MULTITHREADING }}
      ENV_DEV_CLIENT: ${{ secrets.ENV_DEV_CLIENT }}
      ENV_LOCAL_CLIENT: ${{ secrets.ENV_LOCAL_CLIENT }}
      ENV_PROD_CLIENT: ${{ secrets.ENV_PROD_CLIENT }}
      ENV_LOCAL_SERVER: ${{ secrets.ENV_LOCAL_SERVER }}
      ENV_DEV_SERVER: ${{ secrets.ENV_DEV_SERVER }}
      ENV_PROD_SERVER: ${{ secrets.ENV_PROD_SERVER }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
      MAIL_PWD: ${{ secrets.MAIL_PWD }}
      MAIL_USER: ${{ secrets.MAIL_USER }}
      PORT: ${{ secrets.PORT }}
      SESSION_ID: ${{ secrets.SESSION_ID }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      TARGET_ENV: ${{ secrets.TARGET_ENV }}
      SECONDARY_TEST_EMAIL: ${{ secrets.SECONDARY_TEST_EMAIL }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: install dependencies
        run: npm i
      # - uses: actions/setup-python@v2
      # - name: install python dependencies
      #   run: python -m pip install --upgrade mysql-connector-python python-dotenv wheel
      # - name: reset test DB
      #   run: python bin/reset_db/reset_db.py -t --files ./database/
      - name: run unit tests only if files have changed
        run: |
          # Gets array of files that were changed between commits
          FILES=( git diff --name-only $(git rev-parse @~) $(git rev-parse @) )

          RUN_UNIT_TEST=false
          RUN_API_TEST=false

          for f in "${FILES[@]}"
          do
            if [ echo "$f" | grep -q "src/models" ] ; then
              RUN_TEST=true
              break
            fi

            if [ echo "$f" | grep -q "database/" ]; then
              RUN_TEST=true
              break
            fi

            if [ echo "$f" | grep -q "test/jest" ]; then
              RUN_TEST=true
              break
            fi

            if [ echo "$f" | grep -q "test/sample_data/model" ]; then
              RUN_TEST=true
              break
            fi
          done

          if [ "$RUN_TEST" = true ]; then
            npm run test:jest
          else
            echo "No Tests Changed"
          fi
      - name: bdd test
        run: npm run test:cucumber
