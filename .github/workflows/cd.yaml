name: Continuous Deployment

on:
  push:
    branches: [release]

jobs:
  continuous-deployment:
    if: "(!contains(github.event.head_commit.message, 'pipeline skip') && !contains(github.event.head_commit.message, 'skip pipeline')) || (!contains(github.event.head_commit.message, 'cd skip') && !contains(github.event.head_commit.message, 'skip cd'))"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # Needed to set the region in order for the aws cli not to fail
      AWS_REGION: "ca-central-1"
      AWS_DEFAULT_REGION: "ca-central-1"
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: actions/setup-node@v2
      - id: version
        name: Get package version
        run: |
          echo '::set-output name=VERSION::$(./bin/files/get_version_from_package_json.sh)'
      - name: cache node modules
        uses: ./.github/actions/cache-node-modules
      - name: build
        run: npm run build
      - name: create artifact
        run: zip -r deploy.zip ./build/* package.json package-lock.json .ebextensions .platform
      - name: upload artifact
        run: aws s3 cp deploy.zip s3://${{ secrets.AWS_S3_ARTIFACT_BUCKET }}/${{ secrets.AWS_S3_ARTIFACT_LOCATION }}deploy_${{ steps.version.outputs.VERSION }}.zip
      - name: create application version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ secrets.AWS_APPLICATION_NAME }} \
          --version-label ${{ steps.version.outputs.VERSION }} \
          --source-bundle S3Bucket="${{ secrets.AWS_S3_ARTIFACT_BUCKET }}",S3Key="${{ secrets.AWS_S3_ARTIFACT_LOCATION }}deploy_${{ steps.version.outputs.VERSION }}.zip"
      - name: update application
        run: |
          aws elasticbeanstalk update-environment \
          --application-name ${{ secrets.AWS_APPLICATION_NAME }} \
          --environment-name ${{ secrets.AWS_ENVIRONMENT_NAME }} \
          --version-label ${{ steps.version.outputs.VERSION }}
