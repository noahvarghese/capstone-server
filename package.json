{
    "name": "capstone-server",
    "version": "1.0.79",
    "description": "My Capstone",
    "engines": {
        "node": "14.17.5"
    },
    "scripts": {
        "init": "npm run init:npm-shell && npm run init:hooks && npm init:packages",
        "init:hooks": "git config core.hooksPath .githooks",
        "init:npm-shell": "npm config set script-shell /bin/bash",
        "init:packages": "npm i",
        "database:drop": "python3 ./bin/database/drop.py --path .env --name",
        "database:is_empty": "python3 ./bin/database/is_empty.py --path .env --name",
        "database:reset": "python3 ./bin/database/reset.py --files ./database --path .env",
        "database:reset:test": "npm run database:reset -- -t",
        "database:reset:dev": "npm run database:reset -- -d",
        "database:reset:prod": "npm run database:reset -- -p",
        "database:reset:ci": "npm run database:reset -- --ci",
        "premodule-alias": "cp ./src/index.ts /tmp",
        "module-alias": "printf '%s\n%s\n' 'import \"module-alias/register\";' \"$(cat ./src/index.ts)\" > ./src/index.ts",
        "module-alias:cleanup": "mv /tmp/index.ts ./src/index.ts",
        "badges": "istanbul-badges-readme --coverageDir='./__test__/coverage'",
        "prebuild": "npm run module-alias",
        "build": "rm -rf ./build && tsc -p ./tsconfig.build.json",
        "build:local": "npm run build && cp .env ./build",
        "postbuild": "npm run postbuild:email-templates && npm run postbuild:package && npm run module-alias:cleanup",
        "postbuild:email-templates": "cp -R ./src/services/email/templates ./build/services/email",
        "postbuild:package": "cp ./package*.json ./build && cd build && npm install --only=production",
        "format": "prettier --write \"**/*.ts\" \"*.json\"",
        "format:check": "prettier  --check \"**/*.ts\"",
        "start:dev": "NODE_ENV=dev nodemon -e ts,.env,json --ignore build/ --ignore __test__/ --exec ts-node ./src/index.ts -- dev",
        "start": "NODE_ENV=prod node ./index.js",
        "jest": "./node_modules/.bin/jest",
        "jest:list:changed:recent": "npm run jest -- -o --listTests",
        "jest:list:changed:commit": "npm run jest -- --changedSince $(git rev-parse @~) --listTests",
        "jest:list:changed:branch": "npm run jest -- --listTests --changedSince",
        "test": "./bin/test.sh --passWithNoTests",
        "test:debug": "npm run enable:recursive && NODE_ENV=test node --inspect-brk ./node_modules/.bin/jest --runInBand",
        "test:recent": "npm run test -- -o",
        "test:watch": "npm run test -- --watch",
        "unit:test": "npm run test -- --config=jest.config.unit.ts",
        "unit:test:list": "npm run jest -- --config=jest.config.unit.ts --listTests",
        "unit:test:debug": "npm run test:debug -- --config=jest.config.unit.ts",
        "unit:test:recent": "npm run test:recent -- --config=jest.config.unit.ts",
        "unit:test:watch": "npm run test:watch -- --config=jest.config.unit.ts",
        "integration:test": "npm run test -- --config=jest.config.integration.ts",
        "integration:test:list": "npm run jest -- --config=jest.config.integration.ts --listTests",
        "integration:test:debug": "npm run test:debug -- --config=jest.config.integration.ts",
        "integration:test:recent": "npm run test:recent -- --config=jest.config.integration.ts",
        "integration:test:watch": "npm run test:watch -- --config=jest.config.integration.ts",
        "database:test": "npm run test -- --config=jest.config.database.ts",
        "database:test:list": "npm run jest -- --config=jest.config.database.ts --listTests",
        "database:test:debug": "npm run test:debug -- --config=jest.config.database.ts",
        "database:test:recent": "npm run test:recent -- --config=jest.config.database.ts",
        "database:test:watch": "npm run test:watch -- --config=jest.config.database.ts",
        "version:bump": "npm version patch -m 'version bump [skip pipeline]'"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/noahvarghese/capstone-server.git"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "bugs": {
        "url": "https://github.com/noahvarghese/capstone-server/issues"
    },
    "homepage": "https://github.com/noahvarghese/capstone-server#readme",
    "devDependencies": {
        "@babel/preset-typescript": "^7.13.0",
        "@jest-mock/express": "^1.4.5",
        "@types/axios": "^0.14.0",
        "@types/bcryptjs": "^2.4.2",
        "@types/chai": "^4.2.17",
        "@types/cookie-parser": "^1.4.2",
        "@types/cors": "^2.8.10",
        "@types/email-templates": "^8.0.4",
        "@types/express": "^4.17.11",
        "@types/express-fileupload": "^1.1.6",
        "@types/express-mysql-session": "^2.1.2",
        "@types/express-session": "^1.17.3",
        "@types/google-libphonenumber": "^7.4.21",
        "@types/jest": "^27.0.2",
        "@types/mysql": "^2.15.18",
        "@types/node": "^14.17.5",
        "@types/node-fetch": "^2.5.10",
        "@types/nodemailer": "^6.4.1",
        "@types/validator": "^13.1.3",
        "@typescript-eslint/eslint-plugin": "^4.22.0",
        "@typescript-eslint/parser": "^4.22.0",
        "axios": "^0.21.4",
        "chai": "^4.3.4",
        "cross-env": "^7.0.3",
        "dotenv": "^8.2.0",
        "eslint": "^7.24.0",
        "formdata": "^0.10.4",
        "istanbul-badges-readme": "^1.6.0",
        "jest": "^27.3.1",
        "jest-environment-node": "^27.3.1",
        "jest-html-reporter": "^3.4.1",
        "nodemon": "^2.0.7",
        "prettier": "^2.4.0",
        "ts-jest": "^27.0.7",
        "ts-node": "^10.0.0",
        "tsconfig-paths": "^3.11.0",
        "typescript": "^4.2.4"
    },
    "dependencies": {
        "bcryptjs": "^2.4.3",
        "cluster": "^0.7.7",
        "cookie-parser": "^1.4.5",
        "cors": "^2.8.5",
        "email-templates": "^8.0.8",
        "express": "^4.17.1",
        "express-fileupload": "^1.2.1",
        "express-mysql-session": "^2.1.5",
        "express-session": "^1.17.1",
        "fs": "^0.0.1-security",
        "google-libphonenumber": "^3.2.22",
        "module-alias": "^2.2.2",
        "mysql": "^2.18.1",
        "node-fetch": "^2.6.1",
        "nodemailer": "^6.5.0",
        "path": "^0.12.7",
        "pug": "^3.0.2",
        "rand-token": "^1.0.1",
        "ts-transformer-keys": "^0.4.3",
        "typeorm": "^0.2.32",
        "util": "^0.10.4",
        "validator": "^13.6.0"
    },
    "_moduleAliases": {
        "@config": "config",
        "@middleware": "middleware",
        "@models": "models",
        "@routes": "routes",
        "@services": "services",
        "@util": "util"
    }
}
